/* création de variables pour les couleurs, décla en faisant --nomvariable: */
:root {
  --color1: rgb(67, 67, 90);
  --color2: rgb(31, 192, 184);
  --color3: rgb(177, 198, 236);
  --color4: rgb(0, 0, 0);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* pour le comportement des éléments dans les boîtes, mandatory */
}
body {
  background: url(./assets/montagne.JPG) center/cover;
  height: 100vh;
  /* 100% de la taille de l'écran */
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  color: var(--color1);
  display: flex;
  align-items: center;
  /* aligner sur l'axe vertical */
  justify-content: center;
  overflow: hidden;
  /* tout ce qui dépasse de la page est caché */
}
.card {
  background: rgba(255, 255, 255, 0.43);
  width: calc(100% - 50px);
  /* calc pour faire des calculs */
  padding: 20px 20px 6px;
  box-shadow: inset 0px 0px 2px 1px #0000002e;
  border-radius: 5px;
  backdrop-filter: blur(5px);
  /* pour mettre un flou sur l'arriere plan */
}
.card:before {
  /* ajouter un texte en css */
  content: "* \2618";
  /* un before doit toujours avoir un content */
  position: absolute;
  top: 14px;
  right: 20px;
  font-size: 2.4rem;
}
h1 {
  margin-bottom: 24px;
  position: relative;
  /* le parent doit avoir une frontiere pour positionner l'enfant dedans */
}
h1::after {
  content: "";
  position: absolute;
  /* un élément en absolute doit avoir une frontiere */
  background: var(--color2);
  height: 1px;
  width: 100%;
  /* 100% du parent */
  bottom: -14px;
  left: 50%;
  transform: translateX(-50%) scaleX(0);
  /* scale de 1 = scale normale */
  animation: h1anim 11s ease-in-out forwards;
  /* ease in out = lent à la fin et au debut */
  /* forwards pour que ça reste en position finale */
  transform-origin: left;
}
@keyframes h1anim {
  /* keyframe pour animation */
  /* l'animation doit avoir un nom */
  to {
    transform: translateX(-50%) scaleX(1);
    /* oblige rappeler le translateX car sinon il est ecrasé */
  }
}
.grid-container {
  display: grid;
  grid-template-columns: 30% 70%;
}
.polygon-container {
  filter: drop-shadow(-1px 6px 3px var(--color3));
  place-self: center;
  /* si le parent est en grid, juste une ligne pour centrer vs 3 dans le body */
}
.polygon {
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  background: linear-gradient(135deg, var(--color1) 0%, var(--color2) 100%);
  height: 100px;
  width: 100px;
  /* pour faire un shadow, obligé de passer par le parent */
}
.polygon:after {
  content: "Un texte";
  position: absolute;
  color: var(--color4);
  background: var(--color3);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(90deg);
  width: 90px;
  padding: 4px;
  text-align: center;
}
p {
  line-height: 26px;
  margin: 20px 0;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
  overflow: hidden;
  /* pour limiter la taille du texte à 4 lignes, pratique quand on ne sait pas combien de place prendra le texte, on pourra ajouter un "..." pour inciter l'utilisateur à aller voir plus loin */
  text-align: justify;
}
p::selection {
  /* parametrer la couleur de background du texte selectionne */
  background: var(--color2);
}
.checkbox-container {
  display: flex;
  justify-content: space-around;
  margin: 20px 0 30px;
  perspective: 60px;
  /* plus le chiffre est petit est plus la perspective est accentuée */
}
input[type="checkbox"]:checked + label {
  /* si ~ au lieu de +, tous les labels qui suivent au lieu de juste celui qui suit */
  background: var(--color4);
  color: var(--color3);
  transform: scale(1.1);
  /* le bouton grossit de 10% en ajoutant 0.1 dans scale */
  filter: brightness(120%);
}
label {
  cursor: pointer;
  border: 1px solid var(--color3);
  background: var(--color2);
  padding: 10px;
  border-radius: 5px;
  transition: 0.2s;
  /* transition sur l'élément global et pas que l'évènement, sinon pas dispo en entrée et en sortie */
  user-select: none;
  /* l'utilisateur ne peut pas sélectionner le texte */
}
label:first-of-type:hover {
  /* rester si possible dans l'ordre du code visible sur internet avec inspecter */
  animation: label1 1s infinite linear;
}
@keyframes label1 {
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}
label:nth-child(4):hover {
  animation: label2 3s infinite linear;
}
/* chercher le numero de chaque label */
/* 3D : ne pas oublier la perspective sur le parent */
@keyframes label2 {
  33% {
    transform: translateZ(30px);
  }
  66% {
    transform: translateZ(-40px);
  }
  100% {
    transform: translateZ(0);
  }
}

.email {
  text-align: center;
  margin-bottom: 20px;
}
.email input {
  padding: 10px;
  border-radius: 5px;
  outline: none;
  border: 3px solid transparent;
  transition: 0.3s;
  text-align: center;
  font-size: 1.1rem;
  color: var(--color2);
  width: 35%;
  max-width: 300px;
  min-width: 150px;
}
input[type="text"]:focus {
  background: transparent;
  border: 3px solid var(--color3);
  border-radius: 150px;
}
input[type="text"]::placeholder {
  color: var(--color1);
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
}
button {
  cursor: pointer;
  background: var(--color3);
  border-radius: 10px;
  border: none;
  font-size: 1.3rem;
  padding: 10px 20px;
  margin: 0 auto;
  display: block;
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
  transition: 0.4s;
}
button:hover {
  letter-spacing: 3px;
}
button:active {
  transform: scale(1.2);
  /* pour chaque clic il doit y avoir quelque chose qui se passe pour que l'utilisateur s'en rende compte */
}
button:hover + a,
a:hover {
  /* marche aussi quand on bouge sur la page de valider aux CGV */
  opacity: 1;
  transform: translateY(0);
  visibility: visible;
}
a {
  color: var(--color1);
  text-align: center;
  display: block;
  opacity: 0;
  visibility: hidden;
  transform: translateY(20px);
  transition: 0.3s;
}
a:visited {
  color: var(--color1);
}
img {
  height: 40px;
  position: absolute;
  filter: drop-shadow(0px 10px 10px rgba(255, 157, 0, 0.6));
  /* drop shadow pour mettre une ombre */
  z-index: -1;
  /* si tous les éléments sont à 0, il va derrière d'un pdv calque */
  animation: sun 60s infinite linear;
}
@keyframes sun {
  0% {
    top: 2%;
    left: 2%;
    transform: rotate(90deg);
  }
  10% {
    top: 6%;
    left: 30%;
    transform: rotate(90deg);
  }
  20% {
    top: 9%;
    left: 60%;
    transform: rotate(90deg);
  }
  30% {
    top: 0%;
    left: 80%;
    transform: rotate(90deg);
  }
  40% {
    top: 20%;
    left: 120%;
    transform: rotate(90deg);
  }
  50% {
    top: 50%;
    left: 80%;
    transform: rotate(90deg);
  }
  60% {
    top: 90%;
    left: 90%;
    transform: rotate(90deg);
  }
  70% {
    top: 110%;
    left: 50%;
    transform: rotate(90deg);
  }
  80% {
    top: 85%;
    left: 30%;
    transform: rotate(90deg);
  }
  90% {
    top: 50%;
    left: 15%;
    transform: rotate(90deg);
  }
  100% {
    top: 2%;
    left: 2%;
    transform: rotate(90deg);
    /* finir là où il a démarré pour avoir une boucle */
  }
}

/* Creer des polygones https://bennettfeely.com/clippy/ */
/* Générateur de gradients https://cssgradient.io/ */
/* Exemples de gradients https://webgradients.com/ */
